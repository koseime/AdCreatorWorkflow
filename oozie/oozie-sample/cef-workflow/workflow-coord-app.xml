<coordinator-app name="cef-workflow-coordinator" frequency="${coord:minutes(5)}" start="${jobStart}" end="${jobEnd}"
    timezone="America/Los_Angeles"
    xmlns="uri:oozie:coordinator:0.1">
    
    <controls>
         <timeout>0</timeout> 
    </controls>

    <datasets>
        <dataset name="logs" frequency="${coord:minutes(1)}"
            initial-instance="${initialDataset}" timezone="America/Los_Angeles">
            <uri-template>${rootPath}/${YEAR}/${MONTH}/${DAY}/${HOUR}/${MINUTE}</uri-template>
            <done-flag></done-flag>
        </dataset>
        <dataset name="processed" frequency="${coord:minutes(5)}"
            initial-instance="${initialDataset}" timezone="America/Los_Angeles">
            <uri-template>${outputRootPath}/${YEAR}/${MONTH}/${DAY}/${HOUR}/${MINUTE}</uri-template>
            <done-flag></done-flag>
        </dataset>
    </datasets>
  <!--  
    <input-events>
            <data-in name="input" dataset="logs">
                        <instance>${coord:current(0)}</instance>
            </data-in>
    </input-events>    
 -->
    <!--


            I've done something here that is a little bit of a hack. Since Flume
                             doesn't have a good mechanism for notifying an application of when it has
                                          rolled to a new directory, we can just use the next directory as an
                                                       input event, which instructs Oozie not to kick off a coordinator
                                                                    action until the next dataset starts being available.
   -->
   <!--  <input-events>
        <data-in name="input" dataset="logs">            
           <start-instance>${coord:current((coord:tzOffset())-5)}</start-instance>
            <end-instance>${coord:current(coord:tzOffset())}</end-instance> 
		<instance>${coord:current(coord:tzOffset())}</instance> 
        </data-in>
        <data-in name="readyIndicator" dataset="logs">
            <instance>${coord:current(1 + (coord:tzOffset()))}</instance>
        </data-in>
    </input-events>-->
 
    <output-events>
        <data-out name="output" dataset="processed">
            <instance>${coord:current(0)}</instance>
        </data-out>
    </output-events>
    <action>
        <workflow>
            <app-path>${workflowRoot}/workflow-process-action.xml</app-path>
            <configuration>
                <property>
                    <name>jobTracker</name>
                    <value>${jobTracker}</value>
                </property>
                <property>
                    <name>nameNode</name>
                    <value>${nameNode}</value>
                </property>
                <property>
                    <name>queueName</name>
                    <value>default</value>
                </property>
                <property>
                    <name>inputs</name>
                    <value>${rootPath}/${coord:formatTime(coord:dateOffset(coord:nominalTime(), tzOffset, 'MINUTE'), 'yyyy/MM/dd/HH/mm')}</value>

                   <!--  <value>${coord:dataIn('input')}</value> -->
                </property>
                <property>
                    <name>outputs</name>
                    <value>${coord:dataOut('output')}</value>
                </property>
                
                <property>
                    <name>dateHourMinute</name>
                    <value>${coord:formatTime(coord:dateOffset(coord:nominalTime(), tzOffset, 'MINUTE'), 'yyyyMMddHHmm')}</value>
                </property>

            </configuration>
        </workflow>
    </action>
</coordinator-app>
